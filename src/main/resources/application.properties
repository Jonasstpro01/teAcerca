

server.port:8081
spring.datasource.url=jdbc:postgresql://localhost:5432/om_db_SERVER
spring.datasource.username=mmsuper
spring.datasource.password=mmsuper
spring.datasource.driver-class-name=org.postgresql.Driver


# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url = jdbc:mysql://localhost:3306/springlogin
#spring.datasource.username = root
#spring.datasource.password = 
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.postgresqldialect

# Hibernate properties
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from userlogin where email=?
spring.queries.roles-query=select u.email, r.role from userlogin u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?